version: '3.8'

services:
  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - VITE_BACKEND_URL=http://backend:8000
    restart: unless-stopped
    networks:
      - danmaku-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mysql
    environment:
      - PORT=8000
      - REDIS_URL=redis://redis:6379
      - DB_TYPE=mysql
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=danmaku123
      - MYSQL_DATABASE=danmaku_system
      - SOCKET_PING_TIMEOUT=60000
      - SOCKET_PING_INTERVAL=25000
    volumes:
      - ./backend/src:/app/src
    restart: unless-stopped
    networks:
      - danmaku-network

  # Redis服务
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - danmaku-network

  # MySQL服务
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=danmaku123
      - MYSQL_DATABASE=danmaku_system
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - danmaku-network

volumes:
  redis-data:
    driver: local
  mysql-data:
    driver: local

networks:
  danmaku-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16